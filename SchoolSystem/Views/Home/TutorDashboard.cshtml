@model SchoolSystem.ViewModels.TutorDashboardVM

@{
    ViewData["Title"] = "Tutor Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    // Layout = "~/Views/Shared/_ChatLayout.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/tutor.css" />
</head>

<h2>Tutor Dashboard</h2>

<div class="dashboard-container">
    <!-- Tutor Information -->
    <div class="dashboard-section tutor-info">
        <h3>Tutor Information</h3>
        <p><strong>Tutor Name:</strong> @Model.TutorName</p>
    </div>

    <!-- Assigned Groups -->
    <div class="dashboard-section assigned-groups">
        <h3>Assigned Groups</h3>
        @if (Model.AssignedGroups.Any())
        {
            <ul>
                @foreach (var group in Model.AssignedGroups)
                {
                    <li><strong>Group ID:</strong> @group.Id</li>
                }
            </ul>
        }
        else
        {
            <p>No assigned groups available.</p>
        }
    </div>

    <!-- Tutor Blogs -->
    <div class="dashboard-section tutor-blogs">
        <h3>Tutor Blogs</h3>
        @if (Model.TutorBlogs.Any())
        {
            <ul>
                @foreach (var blog in Model.TutorBlogs)
                {
                    <li>You posted a blog on @blog.TimeStamp.ToString("dd/MM/yyyy") by @blog.User?.Name</li>
                }
            </ul>
        }
        else
        {
            <p>No blogs available.</p>
        }
    </div>

    <!-- Student Blogs -->
    <div class="dashboard-section student-blogs">
        <h3>Student Blogs</h3>
        @if (Model.StudentBlogs.Any())
        {
            <ul>
                @foreach (var blog in Model.StudentBlogs)
                {
                    <li>You received a blog from @blog.User?.Name on @blog.TimeStamp.ToString("dd/MM/yyyy")</li>
                }
            </ul>
        }
        else
        {
            <p>No student blogs available.</p>
        }
    </div>

    <!-- Documents -->
    <div class="dashboard-section documents">
        <h3>Documents</h3>
        @if (Model.Documents != null && Model.Documents.Any())
        {
            <ul>
                @foreach (var document in Model.Documents)
                {
                    <li>
                        <p><strong>Uploaded By:</strong> @(document.User?.Name ?? "Unknown User")</p>
                        <p><strong>Upload Date:</strong> @document.UploadDate.ToString("dd/MM/yyyy")</p>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No documents available.</p>
        }
    </div>

    <!-- Recent Messages -->
    <div class="dashboard-section recent-messages">
        <h3>Recent Messages</h3>
        @{
            var currentUserId = ViewData["CurrentUserId"] as string;
        }
        @if (Model.RecentMessages.Any())
        {
            <ul>
                @foreach (var message in Model.RecentMessages)
                {
                    <li>
                        @if (message.SenderId == currentUserId)
                        {
                            <h5>You have sent a message</h5>
                            <p><small>At: @message.TimeStamp.ToString("g")</small></p>
                        }
                        else
                        {
                            <h5>You have received a message</h5>
                            <p><small>From: @(message.Sender?.Name ?? "Unknown User")</small></p>
                            <p><small>At: @message.TimeStamp.ToString("g")</small></p>
                        }
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No recent messages available.</p>
        }
    </div>

    <!-- Search and Filter -->
    <div class="dashboard-section search-filter">
        <h3>Search and Filter</h3>
        <form method="get" asp-action="Dashboard">
            <div class="form-group">
                <label for="searchName">Search by Name:</label>
                <input type="text" id="searchName" name="searchName" value="@Model.SearchName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="groupId">Filter by Group:</label>
                <select id="groupId" name="groupId" class="form-control">
                    <option value="">All Groups</option>
                    @foreach (var group in Model.AssignedGroups)
                    {
                        var selectedGroupId = Model.FilteredStudents?.FirstOrDefault()?.GroupUsers?.FirstOrDefault()?.GroupId;
                        var isSelected = group.Id == selectedGroupId ? "selected" : "";
                        <option value="@group.Id" selected="@isSelected">@group.Id</option>
                    }
                    }
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>

    <!-- Filtered Students -->
    <div class="dashboard-section filtered-students">
        <h3>Filtered Students</h3>
        @if (Model.FilteredStudents != null && Model.FilteredStudents.Any())
        {
            <ul>
                @foreach (var student in Model.FilteredStudents)
                {
                    <li>@student.Name</li>
                }
            </ul>
        }
        else
        {
            <p>No students found.</p>
        }
    </div>

    <!-- Groups List -->
    <div class="dashboard-section groups-list">
        <h3>Groups List</h3>
        @if (Model.AssignedGroups.Any())
        {
            @foreach (var group in Model.AssignedGroups)
            {
                <div>
                    <h5>Group: @group.Id</h5>
                    <ul>
                        @foreach (var groupUser in Model.GroupUsersWithRoles
                       .Where(gu => gu.User.GroupUsers.Any(ggu => ggu.GroupId == group.Id))
                       .GroupBy(gu => gu.User.Id)
                       .Select(g => g.First()))
                        {
                            <li>
                                Name: @groupUser.User.Name - Roles: @string.Join(", ", groupUser.Roles)
                            </li>
                        }
                    </ul>
                </div>
            }
        }
        else
        {
            <p>No groups available.</p>
        }
    </div>
</div>


