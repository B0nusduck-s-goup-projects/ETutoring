@model SchoolSystem.Models.Blog

@{
    ViewData["Title"] = "Blog Details";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<div class="blog-bg-image">
    <div class="overlay"></div>
    <div class="blog-text">
        <h1></h1>
    </div>
</div>

<div class="backPage">
    <a asp-controller="Blog" asp-action="Index">Back</a>
</div>

<div class="container">
    <div class="header-blog">
        <h3 class="topic">@Model.Title</h3>
        <div>
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <img src="@Model.Image" width="400" />
            }
        </div>
    </div>

    <div class="content">
        <p><strong>Date:</strong> @Model.TimeStamp.ToString("dd/MM/yyyy")</p>
        <div class="author-blog-details">
            <span>By</span>
            <span>@Model.User.UserName</span>
        </div>

        <p>@Model.Content</p>
    </div>

    <h3>Rate this Blog</h3>

    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="RateBlog" method="post">
            <input type="hidden" name="blogId" value="@Model.Id" />

            <label>Select rating:</label>
            <select name="rating" class="form-control" required>
                <option value="1">⭐</option>
                <option value="2">⭐⭐</option>
                <option value="3">⭐⭐⭐</option>
                <option value="4">⭐⭐⭐⭐</option>
                <option value="5">⭐⭐⭐⭐⭐</option>
            </select>

            <button type="submit" class="btn btn-primary mt-2">Submit Rating</button>
        </form>
    }
    else
    {
        <p><a asp-controller="Account" asp-action="Login">Login</a> to rate this blog.</p>
    }

    <a asp-action="ListBlogs" class="btn btn-secondary">Back</a>

    @* Show rating *@
    <h3>Rating</h3>
    @{
        var averageRating = (Model.Ratings != null && Model.Ratings.Any())
        ? Model.Ratings.Average(r => r.Rating)
        : 0;
    }
    @if (averageRating > 0)
    {
        <span>@averageRating.ToString("0.0") ⭐</span>
    }
    else
    {
        <span>No ratings yet</span>
    }

    @* Comment *@
    <h3>Comment</h3>

    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="AddComment" method="post">
            <input type="hidden" name="BlogId" value="@Model.Id" />

            <textarea name="Content" class="form-control" placeholder="Write your comment..." required></textarea>
            <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
        </form>
    }
    else
    {
        <p><a asp-controller="Account" asp-action="Login">Login</a> to comment.</p>
    }


    <h3>All Comments</h3>

    @if (Model.Comments.Any())
    {
        <ul>
            @foreach (var comment in Model.Comments.Where(c => c.ParentCommentId == null))
            {
                @Html.Raw(RenderComments(comment, Model.Comments))
            }
        </ul>
    }
    else
    {
        <p>No comments yet. Be the first to comment!</p>
    }

    @if (User.Identity.IsAuthenticated && (Model.UserId == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value || User.IsInRole("Admin") || User.IsInRole("Staff")))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Update</a>
    }



    @* Delete Blog *@

    @if (User.Identity.IsAuthenticated && (Model.UserId == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value || User.IsInRole("Admin")))
    {
        <form asp-action="Delete" method="post" asp-route-id="@Model.Id" style="display:inline;">
            <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure?');">
                Delete Blog
            </button>
        </form>
    }
</div>


@functions {
    string RenderComments(BlogComment comment, IEnumerable<BlogComment> allComments)
    {
        var replies = allComments.Where(c => c.ParentCommentId == comment.Id).ToList();
        var userId = Context.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        var userRoles = Context.User.Claims.Where(c => c.Type == System.Security.Claims.ClaimTypes.Role).Select(c => c.Value).ToList();

        bool canDelete = userId == comment.UserId || userId == comment.Blog.UserId || userRoles.Contains("Admin") || userRoles.Contains("Staff");

        string html = $@"
            <li>
                <strong>{comment.User?.Name}</strong> - {comment.TimeStamp:dd/MM/yyyy HH:mm}
                <p>{comment.Content}</p>

                <button class='btn btn-link reply-btn' data-comment-id='{comment.Id}'>Reply</button>

                <form method='post' action='/Blog/AddComment' class='reply-form' data-comment-id='{comment.Id}' style='display:none;'>
                    <input type='hidden' name='BlogId' value='{comment.BlogId}' />
                    <input type='hidden' name='ParentCommentId' value='{comment.Id}' />
                    <textarea name='Content' class='form-control' placeholder='Reply to this comment...' required></textarea>
                    <button type='submit' class='btn btn-primary mt-2'>Submit</button>
                </form>
        ";

if (canDelete)
{
    html += $@"
        <form method='post' action='/Blog/DeleteComment' class='delete-form' style='display:inline;'>
            <input type='hidden' name='CommentId' value='{comment.Id}' />
            <button type='submit' class='btn btn-danger btn-sm' onclick='return confirm(""Are you sure you want to delete this comment?"");'>Delete</button>
        </form>
    ";
}

        if (replies.Any())
        {
            html += "<ul>";
            foreach (var reply in replies)
            {
                html += RenderComments(reply, allComments);
            }
            html += "</ul>";
        }

        html += "</li>";
        return html;
    }
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".reply-btn").forEach(button => {
            button.addEventListener("click", function () {
                var commentId = this.getAttribute("data-comment-id");

                // Chọn tất cả form có cùng data-comment-id để đảm bảo tìm đúng
                document.querySelectorAll(`form.reply-form[data-comment-id='${commentId}']`).forEach(replyForm => {
                    replyForm.style.display = (replyForm.style.display === "none" || replyForm.style.display === "") ? "block" : "none";
                });
            });
        });
    });
</script>

