@model SchoolSystem.ViewModels.DocumentDetailsVM

@{
    ViewData["Title"] = "Document Details";
}

<div class="document-container">
    <h2 class="document-title">Document Details</h2>
    <div class="document-card">
        <div class="document-card-body">
            <h4 class="document-card-title">@Model.Title</h4>
            <p class="document-description">@Model.Description</p>
            <div class="document-metadata">
                <p>Uploaded by: @Model.UserName</p>
                <p>Upload Date: @Model.UploadDate.ToString("MMM dd, yyyy HH:mm")</p>
                <p>File Type: @Model.FileType</p>
                <p>File Size: @(Model.FileSize / 1024) KB</p>
            </div>
            <div class="document-actions">
                <a href="@Model.FilePath" class="document-btn document-btn-primary" target="_blank">Download Document</a>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="document-btn document-btn-warning">Edit</a>
                <a asp-action="Index" class="document-btn document-btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
</div>

@* Comment *@
<h3>Comment</h3>

@if (User.Identity.IsAuthenticated)
{
    <form asp-action="AddComment" method="post">
        <input type="hidden" name="DocumentId" value="@Model.Id" />

        <textarea name="Content" class="form-control" placeholder="Write your comment..." required></textarea>
        <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
    </form>
}
else
{
    <p><a asp-controller="Account" asp-action="Login">Login</a> to comment.</p>
}


<h3>All Comments</h3>

@if (Model.Comments.Any())
{
    <ul>
        @foreach (var comment in Model.Comments.Where(c => c.ParentCommentId == null))
        {
            @Html.Raw(RenderComments(comment, Model.Comments))
        }
    </ul>
}
else
{
    <p>No comments yet. Be the first to comment!</p>
}
@functions {
    string RenderComments(DocumentComment comment, IEnumerable<DocumentComment> allComments)
    {
        var replies = allComments.Where(c => c.ParentCommentId == comment.Id).ToList();
        var userId = Context.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        var userRoles = Context.User.Claims.Where(c => c.Type == System.Security.Claims.ClaimTypes.Role).Select(c => c.Value).ToList();

        bool canDelete = userId == comment.UserId || userId == comment.Document.UserId || userRoles.Contains("Admin") || userRoles.Contains("Staff");

        string html = $@"
            <li>
                <strong>{comment.User?.Name}</strong> - {comment.TimeStamp:dd/MM/yyyy HH:mm}
                <p>{comment.Content}</p>

                <button class='btn btn-link reply-btn' data-comment-id='{comment.Id}'>Reply</button>

                <form method='post' action='/Document/AddComment' class='reply-form' data-comment-id='{comment.Id}' style='display:none;'>
                    <input type='hidden' name='DocumentId' value='{comment.DocumentId}' />
                    <input type='hidden' name='ParentCommentId' value='{comment.Id}' />
                    <textarea name='Content' class='form-control' placeholder='Reply to this comment...' required></textarea>
                    <button type='submit' class='btn btn-primary mt-2'>Submit</button>
                </form>
        ";

        if (canDelete)
        {
            html += $@"
        <form method='post' action='/Document/DeleteComment' class='delete-form' style='display:inline;'>
            <input type='hidden' name='CommentId' value='{comment.Id}' />
            <button type='submit' class='btn btn-danger btn-sm' onclick='return confirm(""Are you sure you want to delete this comment?"");'>Delete</button>
        </form>
    ";
        }

        if (replies.Any())
        {
            html += "<ul>";
            foreach (var reply in replies)
            {
                html += RenderComments(reply, allComments);
            }
            html += "</ul>";
        }

        html += "</li>";
        return html;
    }
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".reply-btn").forEach(button => {
            button.addEventListener("click", function () {
                var commentId = this.getAttribute("data-comment-id");

                // Ch?n t?t c? form có cùng data-comment-id ?? ??m b?o tìm ?úng
                document.querySelectorAll(`form.reply-form[data-comment-id='${commentId}']`).forEach(replyForm => {
                    replyForm.style.display = (replyForm.style.display === "none" || replyForm.style.display === "") ? "block" : "none";
                });
            });
        });
    });
</script>
