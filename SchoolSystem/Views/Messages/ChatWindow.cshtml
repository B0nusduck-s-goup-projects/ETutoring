@model SchoolSystem.ViewModels.ChatWindowVM
@{
    Layout = "~/Views/Shared/_ChatLayout.cshtml";
}
<div class="layout">
    <h2 class="heading-text">Chat</h2>
</div>

<div class="chat-container">
    <div id="chatWindow" class="chat-messages">
        @if (Model != null)
        {
            @foreach (Message message in Model.Messages)
                {
                    if (message.Sender != Model.CurrentUser)
                    {
                        <div class="message incoming">
                            <h6>@message.Sender.Name</h6>
                            <p>@message.TextContent</p>
                        </div>
                    }
                    else
                    {
                        <div class="message outgoing">
                            <p>@message.TextContent</p>
                        </div>
                    }
                }
        }
        
    </div>
    
    <div class="chat-input">
        <input id="messageInput" type="text" placeholder="Aa" maxlength="500">
        <button id="sendButton">Send</button>
    </div>
</div>
@section Scripts {
    @* client side code for live chat*@
    <script>
        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        //Disable the send button until connection is established.
        document.getElementById("sendButton").disabled = true;

        //initialize 2 way connection to server
        connection.start().then(function () {
            //call the add to group function from chat hub
            connection.invoke('AddToGroup', @Model.CurrentGroup.Id)
            .catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });
        
        //define "ReceiveMessage" function callable from hub
        connection.on("ReceiveMessage", function (senderName, senderId, textMessage) {
            var chatWindow = document.getElementById("chatWindow");
            var textBox = '';
            if(senderId != "@Model.CurrentUser.Id")
            {
                textBox = '<div class="message incoming"><h6>'+ senderName + '</h6><p>' + textMessage + '</p></div>';
            }
            else
            {
                textBox = '<div class="message outgoing"><p>' + textMessage + '</p></div>';
            }
            chatWindow.insertAdjacentHTML('beforeend',textBox)
        });

        //create event listener that will trigger hub function when fired
        document.getElementById("sendButton").addEventListener("click", function (event) {
            var message = document.getElementById("messageInput").value;
            message = message.toString();
            if(!(message == null || message == ''|| message == "")){
                connection.invoke('SendMessage', @Model.CurrentGroup.Id, message)
                .catch(function (err) {
                    return console.error(err.toString());
                });
                document.getElementById("messageInput").value = '';
            }
            event.preventDefault();
        });
    </script>
}

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const menuItems = document.querySelectorAll(".menu-item");

        menuItems.forEach(item => {
            if (item.getAttribute("data-name") === "chats") {
                item.classList.add("active");
            }
        });
    });
</script>
